
// Generated by json-cpp-gen by Viktor Chlumsky
// https://github.com/Chlumsky/json-cpp-gen

#pragma once

#include "octopus.h"

namespace octopus {

class Parser {

public:
    struct Error {
        enum Type {
            OK,
            JSON_SYNTAX_ERROR,
            UNEXPECTED_END_OF_FILE,
            TYPE_MISMATCH,
            ARRAY_SIZE_MISMATCH,
            UNKNOWN_KEY,
            UNKNOWN_ENUM_VALUE,
            VALUE_OUT_OF_RANGE,
            STRING_EXPECTED,
            UTF16_ENCODING_ERROR
        } type;
        int position;

        inline Error(Type type = Error::OK, int position = -1) : type(type), position(position) { }
        operator Type() const;
        operator bool() const;
        const char *typeString() const;
    };

    static Error parse(octopus::Octopus &output, const char *jsonString);
    static Error parse(octopus::Layer &output, const char *jsonString);
    static Error parse(octopus::LayerChange &output, const char *jsonString);

protected:
    const char *cur;

    explicit Parser(const char *str);
    void skipWhitespace();
    Error::Type skipValue();
    bool matchSymbol(char s);
    bool readHexQuad(int &value);
    Error::Type unescape(char *codepoints);
    static bool isAlphanumeric(char c);
    static int decodeHexDigit(char digit);

    Error::Type parseStdString(std::string &value);
    Error::Type parseOctopusBlendMode(octopus::BlendMode &value);
    Error::Type parseNonstdOptionalStdString(nonstd::optional<std::string> &value);
    Error::Type parseOctopusEffectBasis(octopus::EffectBasis &value);
    Error::Type parseDouble(double &value);
    Error::Type parseOctopusVec2(octopus::Vec2 &value);
    Error::Type parseOctopusColor(octopus::Color &value);
    Error::Type parseOctopusShadow(octopus::Shadow &value);
    Error::Type parseNonstdOptionalOctopusShadow(nonstd::optional<octopus::Shadow> &value);
    Error::Type parseNonstdOptionalDouble(nonstd::optional<double> &value);
    Error::Type parseOctopusColorAdjustment(octopus::ColorAdjustment &value);
    Error::Type parseNonstdOptionalOctopusColorAdjustment(nonstd::optional<octopus::ColorAdjustment> &value);
    Error::Type parseOctopusFilterType(octopus::Filter::Type &value);
    Error::Type parseBool(bool &value);
    Error::Type parseOctopusFilter(octopus::Filter &value);
    Error::Type parseStdVectorOctopusFilter(std::vector<octopus::Filter> &value);
    Error::Type parseNonstdOptionalStdVectorOctopusFilter(nonstd::optional<std::vector<octopus::Filter> > &value);
    Error::Type parseNonstdOptionalOctopusColor(nonstd::optional<octopus::Color> &value);
    Error::Type parseOctopusGradientType(octopus::Gradient::Type &value);
    Error::Type parseOctopusGradientInterpolation(octopus::Gradient::Interpolation &value);
    Error::Type parseOctopusGradientColorStop(octopus::Gradient::ColorStop &value);
    Error::Type parseStdVectorOctopusGradientColorStop(std::vector<octopus::Gradient::ColorStop> &value);
    Error::Type parseOctopusGradient(octopus::Gradient &value);
    Error::Type parseNonstdOptionalOctopusGradient(nonstd::optional<octopus::Gradient> &value);
    Error::Type parseOctopusImageRefType(octopus::ImageRef::Type &value);
    Error::Type parseOctopusImageRef(octopus::ImageRef &value);
    Error::Type parseOctopusRectangle(octopus::Rectangle &value);
    Error::Type parseNonstdOptionalOctopusRectangle(nonstd::optional<octopus::Rectangle> &value);
    Error::Type parseOctopusImage(octopus::Image &value);
    Error::Type parseNonstdOptionalOctopusImage(nonstd::optional<octopus::Image> &value);
    Error::Type parseOctopusFillPositioningLayout(octopus::Fill::Positioning::Layout &value);
    Error::Type parseOctopusFillPositioningOrigin(octopus::Fill::Positioning::Origin &value);
    Error::Type parseDouble_6(double value[6]);
    Error::Type parseOctopusFillPositioning(octopus::Fill::Positioning &value);
    Error::Type parseNonstdOptionalOctopusFillPositioning(nonstd::optional<octopus::Fill::Positioning> &value);
    Error::Type parseOctopusFillType(octopus::Fill::Type &value);
    Error::Type parseOctopusFill(octopus::Fill &value);
    Error::Type parseOctopusStrokePosition(octopus::Stroke::Position &value);
    Error::Type parseOctopusStroke(octopus::Stroke &value);
    Error::Type parseNonstdOptionalOctopusStroke(nonstd::optional<octopus::Stroke> &value);
    Error::Type parseNonstdOptionalOctopusFill(nonstd::optional<octopus::Fill> &value);
    Error::Type parseOctopusEffectType(octopus::Effect::Type &value);
    Error::Type parseOctopusEffect(octopus::Effect &value);
    Error::Type parseStdVectorOctopusEffect(std::vector<octopus::Effect> &value);
    Error::Type parseStdListOctopusLayer(std::list<octopus::Layer> &value);
    Error::Type parseNonstdOptionalStdListOctopusLayer(nonstd::optional<std::list<octopus::Layer> > &value);
    Error::Type parseOctopusMaskBasis(octopus::MaskBasis &value);
    Error::Type parseNonstdOptionalOctopusMaskBasis(nonstd::optional<octopus::MaskBasis> &value);
    Error::Type parseStdArrayDouble5(std::array<double, 5> &value);
    Error::Type parseNonstdOptionalStdArrayDouble5(nonstd::optional<std::array<double, 5> > &value);
    Error::Type parseStdVectorStdString(std::vector<std::string> &value);
    Error::Type parseOctopusLayerChangeOp(octopus::LayerChange::Op &value);
    Error::Type parseInt(int &value);
    Error::Type parseNonstdOptionalInt(nonstd::optional<int> &value);
    Error::Type parseNonstdOptionalOctopusEffectBasis(nonstd::optional<octopus::EffectBasis> &value);
    Error::Type parseNonstdOptionalOctopusBlendMode(nonstd::optional<octopus::BlendMode> &value);
    Error::Type parseNonstdOptionalBool(nonstd::optional<bool> &value);
    Error::Type parseOctopusFont(octopus::Font &value);
    Error::Type parseNonstdOptionalOctopusFont(nonstd::optional<octopus::Font> &value);
    Error::Type parseStdVectorOctopusFill(std::vector<octopus::Fill> &value);
    Error::Type parseNonstdOptionalStdVectorOctopusFill(nonstd::optional<std::vector<octopus::Fill> > &value);
    Error::Type parseStdVectorDouble(std::vector<double> &value);
    Error::Type parseNonstdOptionalStdVectorDouble(nonstd::optional<std::vector<double> > &value);
    Error::Type parseOctopusVectorStrokeLineCap(octopus::VectorStroke::LineCap &value);
    Error::Type parseNonstdOptionalOctopusVectorStrokeLineCap(nonstd::optional<octopus::VectorStroke::LineCap> &value);
    Error::Type parseOctopusVectorStrokeLineJoin(octopus::VectorStroke::LineJoin &value);
    Error::Type parseNonstdOptionalOctopusVectorStrokeLineJoin(nonstd::optional<octopus::VectorStroke::LineJoin> &value);
    Error::Type parseOctopusVectorStrokeStyle(octopus::VectorStroke::Style &value);
    Error::Type parseNonstdOptionalOctopusVectorStrokeStyle(nonstd::optional<octopus::VectorStroke::Style> &value);
    Error::Type parseOctopusVectorStroke(octopus::VectorStroke &value);
    Error::Type parseStdVectorOctopusVectorStroke(std::vector<octopus::VectorStroke> &value);
    Error::Type parseNonstdOptionalStdVectorOctopusVectorStroke(nonstd::optional<std::vector<octopus::VectorStroke> > &value);
    Error::Type parseOctopusOpenTypeFeature(octopus::OpenTypeFeature &value);
    Error::Type parseStdVectorOctopusOpenTypeFeature(std::vector<octopus::OpenTypeFeature> &value);
    Error::Type parseNonstdOptionalStdVectorOctopusOpenTypeFeature(nonstd::optional<std::vector<octopus::OpenTypeFeature> > &value);
    Error::Type parseOctopusTextStyleLigatures(octopus::TextStyle::Ligatures &value);
    Error::Type parseNonstdOptionalOctopusTextStyleLigatures(nonstd::optional<octopus::TextStyle::Ligatures> &value);
    Error::Type parseOctopusTextStyleUnderline(octopus::TextStyle::Underline &value);
    Error::Type parseNonstdOptionalOctopusTextStyleUnderline(nonstd::optional<octopus::TextStyle::Underline> &value);
    Error::Type parseOctopusTextStyleLetterCase(octopus::TextStyle::LetterCase &value);
    Error::Type parseNonstdOptionalOctopusTextStyleLetterCase(nonstd::optional<octopus::TextStyle::LetterCase> &value);
    Error::Type parseOctopusTextStyle(octopus::TextStyle &value);
    Error::Type parseNonstdOptionalOctopusTextStyle(nonstd::optional<octopus::TextStyle> &value);
    Error::Type parseNonstdOptionalOctopusEffect(nonstd::optional<octopus::Effect> &value);
    Error::Type parseNonstdOptionalStdVectorOctopusEffect(nonstd::optional<std::vector<octopus::Effect> > &value);
    Error::Type parseNonstdOptionalOctopusFilter(nonstd::optional<octopus::Filter> &value);
    Error::Type parseOctopusShapeFillRule(octopus::Shape::FillRule &value);
    Error::Type parseNonstdOptionalOctopusShapeFillRule(nonstd::optional<octopus::Shape::FillRule> &value);
    Error::Type parseOctopusPathOp(octopus::Path::Op &value);
    Error::Type parseNonstdOptionalOctopusPathOp(nonstd::optional<octopus::Path::Op> &value);
    Error::Type parseOctopusPathType(octopus::Path::Type &value);
    Error::Type parseStdVectorOctopusPath(std::vector<octopus::Path> &value);
    Error::Type parseNonstdOptionalStdVectorOctopusPath(nonstd::optional<std::vector<octopus::Path> > &value);
    Error::Type parseOctopusPath(octopus::Path &value);
    Error::Type parseNonstdOptionalOctopusPath(nonstd::optional<octopus::Path> &value);
    Error::Type parseOctopusShapeStroke(octopus::Shape::Stroke &value);
    Error::Type parseStdVectorOctopusShapeStroke(std::vector<octopus::Shape::Stroke> &value);
    Error::Type parseOctopusShape(octopus::Shape &value);
    Error::Type parseNonstdOptionalOctopusShape(nonstd::optional<octopus::Shape> &value);
    Error::Type parseNonstdOptionalOctopusVectorStroke(nonstd::optional<octopus::VectorStroke> &value);
    Error::Type parseOctopusStyleRangeRange(octopus::StyleRange::Range &value);
    Error::Type parseStdVectorOctopusStyleRangeRange(std::vector<octopus::StyleRange::Range> &value);
    Error::Type parseOctopusStyleRange(octopus::StyleRange &value);
    Error::Type parseStdVectorOctopusStyleRange(std::vector<octopus::StyleRange> &value);
    Error::Type parseNonstdOptionalStdVectorOctopusStyleRange(nonstd::optional<std::vector<octopus::StyleRange> > &value);
    Error::Type parseStdVectorOctopusStroke(std::vector<octopus::Stroke> &value);
    Error::Type parseNonstdOptionalStdVectorOctopusStroke(nonstd::optional<std::vector<octopus::Stroke> > &value);
    Error::Type parseOctopusTextBaselinePolicy(octopus::Text::BaselinePolicy &value);
    Error::Type parseOctopusTextHorizontalAlign(octopus::Text::HorizontalAlign &value);
    Error::Type parseOctopusTextFrameMode(octopus::TextFrame::Mode &value);
    Error::Type parseOctopusDimensions(octopus::Dimensions &value);
    Error::Type parseNonstdOptionalOctopusDimensions(nonstd::optional<octopus::Dimensions> &value);
    Error::Type parseOctopusTextFrame(octopus::TextFrame &value);
    Error::Type parseNonstdOptionalOctopusTextFrame(nonstd::optional<octopus::TextFrame> &value);
    Error::Type parseOctopusTextOverflowPolicy(octopus::Text::OverflowPolicy &value);
    Error::Type parseOctopusTextVerticalAlign(octopus::Text::VerticalAlign &value);
    Error::Type parseOctopusText(octopus::Text &value);
    Error::Type parseNonstdOptionalOctopusText(nonstd::optional<octopus::Text> &value);
    Error::Type parseStdArrayDouble6(std::array<double, 6> &value);
    Error::Type parseNonstdOptionalStdArrayDouble6(nonstd::optional<std::array<double, 6> > &value);
    Error::Type parseOctopusLayerChangeValues(octopus::LayerChange::Values &value);
    Error::Type parseOctopusLayerChangeSubject(octopus::LayerChange::Subject &value);
    Error::Type parseOctopusLayerChange(octopus::LayerChange &value);
    Error::Type parseStdVectorOctopusLayerChange(std::vector<octopus::LayerChange> &value);
    Error::Type parseOctopusOverride(octopus::Override &value);
    Error::Type parseStdVectorOctopusOverride(std::vector<octopus::Override> &value);
    Error::Type parseNonstdOptionalStdVectorOctopusOverride(nonstd::optional<std::vector<octopus::Override> > &value);
    Error::Type parseOctopusLayerType(octopus::Layer::Type &value);
    Error::Type parseOctopusLayer(octopus::Layer &value);
    Error::Type parseNonstdOptionalPtrOctopusLayer(nonstd::optional_ptr<octopus::Layer> &value);
    Error::Type parseOctopusOctopusType(octopus::Octopus::Type &value);
    Error::Type parseOctopusOctopus(octopus::Octopus &value);

private:
    template <typename T>
    Error::Type readSigned(T &value);

};

}
